global:
  # -- "aws" or "gcp" (required)
  provider: ""

  # -- Default hub for istio images
  hub: quay.io/cortexlabs

  # -- Default tag for istio images
  tag: master # CORTEX_VERSION

  proxy:
    # -- Image for the istio proxy controller
    image: istio-proxy

cortex:
  # -- Name of the cluster (required)
  cluster_name: ""
  # -- "my-cortex-bucket" (without s3:// or gs://) (required)
  bucket: ""

  # -- AWS-only (region where the cluster was provisioned) (required)
  region: ""

  # -- GCP-only (zone where the cluster was provisioned) (required)
  zone: ""
  # -- GCP-only project ID (required)
  project: ""

  # CORTEX_VERSION
  image_operator: quay.io/cortexlabs/operator:master
  image_manager: quay.io/cortexlabs/manager:master
  image_downloader: quay.io/cortexlabs/downloader:master
  image_request_monitor: quay.io/cortexlabs/request-monitor:master
  image_cluster_autoscaler: quay.io/cortexlabs/cluster-autoscaler:master
  image_metrics_server: quay.io/cortexlabs/metrics-server:master
  image_inferentia: quay.io/cortexlabs/inferentia:master
  image_neuron_rtd: quay.io/cortexlabs/neuron-rtd:master
  image_nvidia: quay.io/cortexlabs/nvidia:master
  image_fluent_bit: quay.io/cortexlabs/fluent-bit:master
  image_istio_proxy: quay.io/cortexlabs/istio-proxy:master
  image_istio_pilot: quay.io/cortexlabs/istio-pilot:master
  image_google_pause: quay.io/cortexlabs/pause:master
  image_prometheus: quay.io/cortexlabs/prometheus:master
  image_prometheus_config_reloader: quay.io/cortexlabs/prometheus-config-reloader:master
  image_prometheus_operator: quay.io/cortexlabs/prometheus-operator:master
  image_prometheus_statsd_exporter: quay.io/cortexlabs/prometheus-statsd-exporter:master
  image_grafana: quay.io/cortexlabs/grafana:master

  resources:
    requests:
      cpu: 200m
      memory: 128Mi
    limits:
      cpu: 2000m
      memory: 1024Mi

networking:
  api-ingress:
    gateways:
      istio-ingressgateway:
        # -- "ClusterIP", "NodePort" or "LoadBalancer"; for API ingress (RealtimeAPI, BatchAPI, TaskAPI, TrafficSplitter)
        type: LoadBalancer
        # -- "Local" or "Cluster"
        externalTrafficPolicy: Cluster
        # -- Annotations to configure your ingress (specific to aws or gcp)
        serviceAnnotations: []

  operator-ingress:
    gateways:
      istio-ingressgateway:
        # -- "ClusterIP", "NodePort" or "LoadBalancer"; for operator ingress (CLI/Python Client)
        type: LoadBalancer
        # -- "Local" or "Cluster"
        externalTrafficPolicy: Cluster
        # -- Annotations to configure your ingress (specific to aws or gcp)
        serviceAnnotations: []

  istio-discovery:
    pilot:
      # Hub for pilot
      hub: quay.io/cortexlabs
      # Tag for pilot 
      tag: master # CORTEX_VERSION

      # Can be a full hub/image:tag
      image: istio-pilot

prometheus:
  # -- Size of the volume for prometheus
  volumeClaimSize: 40Gi
  # -- How much prometheus will store in its volume
  retentionSize: 35GB
  # -- Retention time window
  retentionWindow: 2w

  monitorResources:
    requests:
      cpu: null
      memory: 400Mi
    limits:
      cpu: null
      memory: null
  operatorResources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 200m
      memory: 200Mi

prometheusStatsDExporter:
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: null
      memory: 100Mi

addons:
  grafana:
    # -- Whether grafana is enabled or not
    enabled: true
    # -- How much grafana can store in its volume
    storage: 2Gi
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: 200m
        memory: 200Mi

  fluentbit:
    # -- Whether fluentbit is enabled or not; used for exporting logs to CloudWatch or Stackdriver
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 150Mi
      limits:
        cpu: null
        memory: 150Mi
    # dataOutputConf: |
    #   [OUTPUT]
    #       Name              cloudwatch
    #       Match             k8s_container.*
    #       region            {{ .Values.cortex.region }}
    #       log_group_name    {{ .Values.cortex.cluster_name }}
    #       log_stream_prefix kube.
    #       auto_create_group true

  kubeMetricsServer:
    # -- Whether the kube metrics server is enabled or not; for "kubectl top" command
    enabled: false
